gravedad_2=jitter(data$Gravedad)
library(gratia)
library(bnlearn)
library(nlme)
library(ggplot2)
data = read.csv("C:/Users/Usuario/Downloads/ckd.csv")
head(data)
data = data[, -c(1, 5, 6, 7, 8, 9, 10, 20, 21, 22, 23, 24, 25, 26)]
head(data)
new_names = c("Edad", "Presion", "Gravedad", "Glucosa", "Urea", "Creatinina", "Sodio", "Potasio", "Hemoglobina", "Hematocrito", "CelulasBlancas", "CelulasRojas")
colnames(data) = new_names
data$Hematocrito = as.numeric(data$Hematocrito)
data$CelulasBlancas = as.numeric(data$CelulasBlancas)
data$CelulasRojas = as.numeric(data$CelulasRojas)
for (col in names(data)) {
mean_col = mean(data[, col], na.rm = TRUE)
data[, col] = replace(data[, col], is.na(data[, col]), mean_col)
}
head(data)
gravedad_2=jitter(data$Gravedad)
data_ruido <- cbind(data, gravedad_2)
data_ruido<-data_ruido[, -3]
head(data_ruido)
ggplot(data, aes(x = Glucosa, y = Edad)) + geom_point(color = "steelblue", alpha = 0.3)+
geom_smooth(method = lm, se = FALSE, lwd = 1, color = "dodgerblue") +
theme_bw() + labs(x = "Glucosa", y = "Edad", title = "Glucosa vs Edad (Lineal)") +
theme(plot.title = element_text(hjust = 0.5, face = "bold", margin = margin(0, 0, 5, 0)),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold", angle = 90),
legend.title = element_text(hjust = 0.5, face = "bold"),
legend.text = element_text(hjust = 0.5),
strip.text = element_text(hjust = 0.5, face = "bold", margin = margin(2, 3, 3, 3)),
plot.subtitle = element_text(hjust = 0.5, face = "bold", size = 10, margin = margin(0, 0, 5, 0)))
mod_gam<-gam(Glucosa ~ s(Edad), data = data)
#| echo: false
# Instalar Bioconductor si aún no está instalado
#if (!requireNamespace("BiocManager", quietly = TRUE))
#    install.packages("BiocManager")
# Cargar la biblioteca BiocManager
#library(BiocManager)
# Instalar paquetes desde Bioconductor
#BiocManager::install(c("graph", "Rgraphviz"))
#install.packages("mgcv")
#install.packages("gratia")
suppressPackageStartupMessages(library(mgcv))
suppressPackageStartupMessages(library(gratia))
suppressPackageStartupMessages(library(bnlearn))
suppressPackageStartupMessages(library(nlme))
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(mgcv))
suppressPackageStartupMessages(library(gratia))
suppressPackageStartupMessages(library(bnlearn))
suppressPackageStartupMessages(library(nlme))
suppressPackageStartupMessages(library(ggplot2))
mod_gam<-gam(Glucosa ~ s(Edad), data = data)
draw(mod_gam, residuals = TRUE) +
theme_bw() + labs(x = "Glucosa", y = "Edad", title = "Glucosa vs Edad (No lineal)") +
theme(plot.title = element_text(hjust = 0.5, face = "bold", margin = margin(0, 0, 5, 0)),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold", angle = 90),
legend.title = element_text(hjust = 0.5, face = "bold"),
legend.text = element_text(hjust = 0.5),
strip.text = element_text(hjust = 0.5, face = "bold", margin = margin(2, 3, 3, 3)),
plot.subtitle = element_text(hjust = 0.5, face = "bold", size = 10, margin = margin(0, 0, 5, 0)))
dag=model2network("[Edad][Urea|Edad][Presion|Edad][Glucosa|Edad][Creatinina|Glucosa:Presion:Urea][Gravedad|Urea][CelulasBlancas|Presion][Hemoglobina|Creatinina:Gravedad][Potasio|Hemoglobina][Sodio|Hemoglobina][CelulasRojas|Hemoglobina][Hematocrito|CelulasRojas]")
g <- Rgraphviz::layoutGraph(bnlearn::as.graphNEL(dag))
graph::nodeRenderInfo(g) <- list(fontsize=22)
Rgraphviz::renderGraph(g)
# Create the title text
title_text <- "DAG Propuesta por equipo"
# Add title using grid graphics
library(grid)
grid.text(label = title_text, x = 0.45, y = 0.99, gp = gpar(fontsize = 18, fontface = "bold"))
suppressPackageStartupMessages(library(mgcv))
suppressPackageStartupMessages(library(gratia))
suppressPackageStartupMessages(library(bnlearn))
suppressPackageStartupMessages(library(nlme))
suppressPackageStartupMessages(library(ggplot2))
data = read.csv("C:/Users/Usuario/Downloads/ckd.csv")
head(data)
data = data[, -c(1, 5, 6, 7, 8, 9, 10, 20, 21, 22, 23, 24, 25, 26)]
head(data)
new_names = c("Edad", "Presion", "Gravedad", "Glucosa", "Urea", "Creatinina", "Sodio", "Potasio", "Hemoglobina", "Hematocrito", "CelulasBlancas", "CelulasRojas")
colnames(data) = new_names
data$Hematocrito = as.numeric(data$Hematocrito)
data$CelulasBlancas = as.numeric(data$CelulasBlancas)
data$CelulasRojas = as.numeric(data$CelulasRojas)
for (col in names(data)) {
mean_col = mean(data[, col], na.rm = TRUE)
data[, col] = replace(data[, col], is.na(data[, col]), mean_col)
}
head(data)
gravedad_2=jitter(data$Gravedad)
data_ruido <- cbind(data, gravedad_2)
data_ruido<-data_ruido[, -3]
head(data_ruido)
ggplot(data, aes(x = Glucosa, y = Edad)) + geom_point(color = "steelblue", alpha = 0.3)+
geom_smooth(method = lm, se = FALSE, lwd = 1, color = "dodgerblue") +
theme_bw() + labs(x = "Glucosa", y = "Edad", title = "Glucosa vs Edad (Lineal)") +
theme(plot.title = element_text(hjust = 0.5, face = "bold", margin = margin(0, 0, 5, 0)),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold", angle = 90),
legend.title = element_text(hjust = 0.5, face = "bold"),
legend.text = element_text(hjust = 0.5),
strip.text = element_text(hjust = 0.5, face = "bold", margin = margin(2, 3, 3, 3)),
plot.subtitle = element_text(hjust = 0.5, face = "bold", size = 10, margin = margin(0, 0, 5, 0)))
mod_gam<-gam(Glucosa ~ s(Edad), data = data)
draw(mod_gam, residuals = TRUE) +
theme_bw() + labs(x = "Glucosa", y = "Edad", title = "Glucosa vs Edad (No lineal)") +
theme(plot.title = element_text(hjust = 0.5, face = "bold", margin = margin(0, 0, 5, 0)),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold", angle = 90),
legend.title = element_text(hjust = 0.5, face = "bold"),
legend.text = element_text(hjust = 0.5),
strip.text = element_text(hjust = 0.5, face = "bold", margin = margin(2, 3, 3, 3)),
plot.subtitle = element_text(hjust = 0.5, face = "bold", size = 10, margin = margin(0, 0, 5, 0)))
dag=model2network("[Edad][Urea|Edad][Presion|Edad][Glucosa|Edad][Creatinina|Glucosa:Presion:Urea][Gravedad|Urea][CelulasBlancas|Presion][Hemoglobina|Creatinina:Gravedad][Potasio|Hemoglobina][Sodio|Hemoglobina][CelulasRojas|Hemoglobina][Hematocrito|CelulasRojas]")
g <- Rgraphviz::layoutGraph(bnlearn::as.graphNEL(dag))
graph::nodeRenderInfo(g) <- list(fontsize=22)
Rgraphviz::renderGraph(g)
# Create the title text
title_text <- "DAG Propuesta por equipo"
# Add title using grid graphics
library(grid)
grid.text(label = title_text, x = 0.45, y = 0.99, gp = gpar(fontsize = 18, fontface = "bold"))
BIC1=score(dag, data = data, type = "bic-g")
#cat("BIC del modelo lineal DAG equipo:",BIC1, "\n")
AIC1=score(dag, data = data, type = "aic-g")
#cat("BIC del modelo lineal DAG equipo:",AIC1, "\n")
write.csv(data, file = "data_parametric.csv", row.names = FALSE)
write.csv(data_ruido, file = "data_nonparametric.csv", row.names = FALSE)
